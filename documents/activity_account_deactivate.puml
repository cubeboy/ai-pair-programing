@startuml Activity Diagram - Deactivate Account

!theme plain
title 회계 관리 솔루션 - 계정과목 비활성화 액티비티 다이어그램

|Client|
start
:계정과목 비활성화 요청;
:DELETE /api/v1/accounts/{id};

|AccountController|
:요청 수신;
:계정 ID 파싱;

|AccountService|
:계정 조회;

if (계정 존재?) then (no)
    :예외 발생\n"계정 없음";
    |Client|
    :404 Not Found 응답;
    stop
else (yes)
    :하위 계정 조회;
    note right
        parent_id가 현재 계정 ID인
        모든 계정을 조회
    end note
    
    if (하위 계정 존재?) then (yes)
        :예외 발생\n"하위 계정 존재";
        |Client|
        :400 Bad Request 응답;
        note left
            하위 계정이 있는 계정은
            비활성화할 수 없음
            (참조 무결성 보장)
        end note
        stop
    else (no)
        :계정 비활성화;
        note right
            account.deactivate() 메소드 호출
            - isActive = false 설정
            - updatedAt 자동 설정
        end note
        
        |AccountRepositoryImpl|
        :도메인 객체를 JPA 엔티티로 변환;
        
        |Database|
        :계정과목 비활성화 업데이트;
        note right
            UPDATE accounts SET
            is_active = false,
            updated_at = ?
            WHERE id = ?
        end note
        
        |AccountRepositoryImpl|
        :저장된 엔티티를 도메인 객체로 변환;
        
        |AccountController|
        :Account를 AccountResponse로 변환;
        
        |Client|
        :200 OK 응답\n(AccountResponse);
        note left
            비활성화된 계정 정보 반환
            isActive = false
        end note
    endif
endif

stop

@enduml
